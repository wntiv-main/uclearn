#uclearn-inspectors-list {
	background-color: var(--uclearn-translucent-bg);
	padding: var(--uclearn-radius);
	border-top-left-radius: var(--uclearn-radius);
	position: fixed;
	bottom: 0;
	width: fit-content;
	z-index: 9999;
	border-top: 1px solid currentColor;
	border-left: 1px solid currentColor;
	display: grid;
	grid-template-columns: repeat(3, max-content);
	max-height: 50vh;
	overflow: auto;
	right: 0;
	translate: calc(100% - var(--uclearn-radius)) 0;
	transition: translate var(--uclearn-transition-short);

	&:hover,
	:root:not(:hover) & {
		translate: 0;
	}
}

#uclearn-inspector-highlight {
	position: fixed;
	background-color: #36b0ff3d;
	z-index: 9999;
	pointer-events: none;
}

#uclearn-loading-progress {
	position: fixed;
	top: 0px;
	left: 0px;
	height: 10px;
	background-color: var(--uclearn-accent-color);
	z-index: 9999;
}

.__uclearn-mathlive-field {
	background-color: var(--uclearn-translucent-bg);
	color: var(--uclearn-foreground);
	transition: box-shadow var(--uclearn-transition-short);
	border: 1px solid currentColor;
	border-radius: calc(var(--uclearn-radius) / 2);
	font-size: 1.2em;
	min-width: 3ch;
	margin: 0.2rem 0.2ch;
	cursor: text;
	--caret-color: currentColor;
	--selection-color: white;
	--selection-background-color: #0080ff60;
	--contains-highlight-background-color: var(--uclearn-hover-tint);
	--placeholder-color: var(--uclearn-foreground-muted);
	--placeholder-opacity: 1;
	--correct-color: var(--uclearn-color-success);
	--incorrect-color: var(--uclearn-color-error);

	&::part(container) {
		padding: 0.2em 0.3ch;
	}

	@media (pointer: fine) {
		&::part(virtual-keyboard-toggle) {
			display: none;
		}
		&::part(menu-toggle) {
			display: none;
		}
	}

	&:focus-within {
		outline: none;
		box-shadow: var(--uclearn-focus-shadow);
	}

	+ :is(
			input,
			.matrixsquarebrackets,
			.matrixroundbrackets,
			.matrixbarbrackets
		) {
		display: none !important;

		:root.__uclearn-mathlive-debug & {
			display: inline-block !important;
			opacity: 0.2;
			field-sizing: content;
			width: auto !important;

			& input {
				field-sizing: content;
				width: 100% !important;
			}
		}
	}
}

.__uclearn-workspace-form {
	display: grid;
	grid-template-columns: repeat(
		auto-fill,
		minmax(calc(1.4em + var(--uclearn-gap) * 2), max-content)
	);
	gap: var(--uclearn-gap);
	margin-top: var(--uclearn-gap);
	align-items: stretch;

	button {
		border: none;
		border-radius: var(--uclearn-radius);
		padding: var(--uclearn-gap);
		background-color: transparent;
		transition: background-color var(--uclearn-transition-short);

		&:is(:hover, :focus-visible) {
			background-color: var(--uclearn-hover-tint);
		}

		&:active {
			background-color: var(--uclearn-active-tint);
		}
	}
}

.__uclearn-icon-grid {
	display: grid;
	grid-template-rows: repeat(2, 1fr);
	grid-template-columns: repeat(2, 1fr);
	height: 100%;

	> svg {
		margin: -0.1em;
		aspect-ratio: 1;
	}
}

.__uclearn-workspace-math,
.__uclearn-workspace-draw {
	display: flex;
	align-items: stretch;

	> svg,
	> .__uclearn-icon-grid {
		aspect-ratio: 1;
	}
}

.__uclearn-help-button,
.__uclearn-settings-button,
.__uclearn-workspace-tools .dropdown-toggle,
.__uclearn-workspace-tools .dropdown-menu .dropdown-item {
	> svg,
	> .__uclearn-icon-grid {
		height: 90%;
		aspect-ratio: 1;
	}
}

.__uclearn-workspace-tools
	.dropdown-toggle:is(:hover, :focus-visible)
	+ .dropdown-menu,
.__uclearn-workspace-tools .dropdown-menu:is(:hover, :focus-within) {
	display: flex;
}

#user-action-menu {
	contain: layout;

	.carousel-inner {
		overflow: visible;
	}
}

:root:root:root:root .__uclearn-workspace-tools {
	flex-direction: column;
	align-items: stretch;

	.dropdown-toggle::after {
		margin-left: auto;
	}

	#page-wrapper#page-wrapper
		&
		.dropdown-toggle:is(:hover, :focus-visible, :active) {
		box-shadow: 1px 2px 7px -2px var(--uclearn-shadow-color) !important;
	}

	.dropdown-menu {
		position: fixed;
		inset: auto;
		right: 100%;
		translate: 0 calc(var(--uclearn-gap) * -1);
	}
}

#__uclearn-jax-options {
	position: absolute;
	left: 100%;
	top: 50%;
	translate: -1px -50%;
	background-color: var(--uclearn-translucent-bg);
	backdrop-filter: var(--uclearn-bg-effect);
	display: flex;
	transition: opacity var(--uclearn-transition-short);
	opacity: 0;
	pointer-events: none;
	z-index: 1;
	border-radius: var(--uclearn-radius);

	:has(> &) {
		position: relative;
	}

	:is(.MathJax, .MathJax_Display):is(:hover, :focus-within) & {
		opacity: 1;
		pointer-events: all;
	}

	button {
		padding: var(--uclearn-gap);
		border: none;

		&:first-child {
			border-top-left-radius: inherit;
			border-bottom-left-radius: inherit;
		}

		&:last-child {
			border-top-right-radius: inherit;
			border-bottom-right-radius: inherit;
		}

		svg {
			height: 1.5em;
			aspect-ratio: 1;
		}
	}
}

#uclearn-help-container {
	max-width: 60vw;
}

#uclearn-settings-form {
	min-width: 60vw;
	display: flex;
	flex-flow: column;
	align-items: stretch;

	.uclearn-bg-select {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
		gap: var(--uclearn-gap);
		width: min-content;
		min-width: 100%;

		input[type="radio"],
		input[type="file"] {
			position: absolute;
			opacity: 0;
			pointer-events: none;
		}

		.uclearn-custom-images-container {
			display: contents;
		}

		label {
			display: flex;
			align-items: center;
			justify-content: center;
			aspect-ratio: 16 / 9;
			border-radius: var(--uclearn-radius);
			padding: var(--uclearn-gap);
			transition: background-color var(--uclearn-transition-short);
			min-width: 0;
			min-height: 0;

			&:hover,
			input:focus + & {
				background-color: var(--uclearn-hover-tint);
			}

			&:active {
				background-color: var(--uclearn-active-tint);
			}

			img {
				width: 100%;
				border-radius: calc(var(--uclearn-radius) - var(--uclearn-gap));
				max-height: 100%;
				object-fit: cover;
			}

			svg {
				max-width: 100%;
				max-height: 100%;
			}
		}
	}

	.uclearn-color-scheme-select {
		display: flex;
		border-radius: var(--uclearn-radius);
		background-color: var(--uclearn-translucent-bg);
		overflow: hidden;
		width: fit-content;

		input[type="radio"] {
			position: absolute;
			opacity: 0;
			pointer-events: none;
		}

		label {
			transition: background-color var(--uclearn-transition-short);
			padding: var(--uclearn-gap);
			margin: 0;

			svg {
				height: 1.5em;
			}

			&:hover,
			input:focus + & {
				background-color: var(--uclearn-hover-tint);
			}

			&:active,
			input:checked + & {
				background-color: var(--uclearn-active-tint);
			}
		}
	}
}

.__uclearn-excalidraw-overlay {
	grid-row: 1 / -1;
	/* Above drawers, below nav */
	z-index: 1018;
	margin-block: calc(-1 * var(--uclearn-gap-large));
	position: absolute;
	height: calc(100% + 2 * var(--uclearn-gap-large));
}

.excalidraw {
	/* Above everything else, please */
	--zIndex-modal: 2000;
	--zIndex-popup: 2001;
}

.uclearn-video-wrapper {
	border-radius: var(--uclearn-radius);
	overflow: hidden;
}

.uclearn-background-host {
	grid-area: 1 / page-left / -1 / page-right;
	display: grid;
	grid-template-columns: minmax(0, 1fr);
	justify-self: center;
	justify-content: center;
	overflow: clip;
	position: absolute;
	height: 100%;
	z-index: -1;
	border-radius: inherit;

	&::before {
		content: "";
		display: block;
		width: 100vw;
		height: 100vh;
		position: sticky;
		top: 0;
		left: 0;
		margin: -100%;
		justify-self: center;
		z-index: -1;
		background-image: var(--uclearn-background-imageset);
		background-size: cover;
		background-position: center;
		filter: var(--uclearn-bg-effect);
		box-shadow: inset 0 0 0 100vmax var(--uclearn-translucent-bg);
	}
}
